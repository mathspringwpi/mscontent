{\rtf1\ansi\ansicpg1252\deff0\uc1{\fonttbl{\f0\fcharset0 Times New Roman;}}{\colortbl
;\red0\green128\blue0 ;}{\stylesheet{\s0\nowidctlpar\nooverflow\sl240\slmult1\f0
\fs20\kerning28 Normal;}}\paperw12240\paperh15840\margt1440\margl1800\margr1800\margb1440
\headery720\footery864\deftab720\pgnstart1\viewkind1\viewscale100\fet0{\*\docvar
{ColorSet}{-1}}{\*\docvar{ColorPos}{-1}}{\*\docvar{StyleSet}{-1}}{\*\docvar{StylePos
}{-1}}\pard\plain\pard\nowidctlpar\nooverflow\qc\sl240\slmult1{\f0\lang1033\fs36\kerning28
{\header\pard\nowidctlpar\nooverflow\sl240\slmult1\tqc\tx4320\tqr\tx8640\fs20\par
}{\footer\pard\nowidctlpar\nooverflow\sl240\slmult1\tqc\tx4320\tqr\tx8640\fs20\par
}First Frame\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 s = 0;\par
}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\b\i\f0\lang1033\fs20\kerning28 _root
.wrong_count = 1{\b0\i0 ;   {\b <- {\fs24 REFER BELOW}}\par}}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 labels=new
 Array()\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 labels[0]="
question"\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 labels[1]="
pythag_theorem"\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 labels[2]="
review"\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 labels[3]="
choose_d"\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 snd=new Array
()\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 snd[0]="question
"\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 snd[1]="pythag
_theorem"\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 snd[2]="review
"\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 snd[3]="choose
_d"\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 function 
fadeIn(victim, scale) \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab //----------- 
HARDCODING --------------//\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab i = 0
;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab alphaRate
 = 25;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab xRate
 = 1;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab //----
COMPEMSATE-FOR-X-MOVE------//\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab if (eval
(victim)._alpha == 0) \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab eval
(victim)._x -= 100/alphaRate*xRate;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab \}\par
}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab //------------ 
IF STATEMENT ----------------//                \par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab if (eval
(victim)._alpha<100) \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab eval
(victim)._alpha += Math.round(alphaRate/scale);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab eval
(victim)._x += Math.round(xRate/scale);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab //
trace(eval(victim));\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab \}\par
}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 \}\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 studAnswer
 = "";\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 /fill
 in correct answer (the actual text, not the letter)\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 theAnswer
 = "sqrt 2";\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 //Put
 the multiple choice answers here (they may appear in a different order after a 
shuffle)\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 answer1
 = "1";\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 answer2
 = "(2) * sqrt 2";\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 answer3
 = "4";\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 answer4
 = "sqrt 2";\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 answer5
 = "2";\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 ///////////////////////////////////////////////////////////////////////////////////////////////////////
\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 //Below
 is the code that displays and checks answers, makes things work etc...\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 arrayIn
 = new Array();\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 arrayIn
[0] = answer1;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 arrayIn
[1] = answer2;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 arrayIn
[2] = answer3;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 arrayIn
[3] = answer4;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 arrayIn
[4] = answer5;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 setupText
(arrayIn);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 function
 setupText(answerArray) \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab this
.createTextField("ABox", 100, 115, 270, 100, 16);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab ABox
.autoSize = true;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab ABox
.text = answerArray[0];\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab this
.createTextField("BBox", 101, 115, 294, 100, 16);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab BBox
.autoSize = true;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab BBox
.text = answerArray[1];\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab this
.createTextField("CBox", 102, 115, 318, 100, 16);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab CBox
.autoSize = true;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab CBox
.text = answerArray[2];\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab this
.createTextField("DBox", 103, 115, 342, 100, 16);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab DBox
.autoSize = true;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab DBox
.text = answerArray[3];\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab this
.createTextField("EBox", 104, 115, 366, 100, 16);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab EBox
.autoSize = true;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28\tab EBox
.text = answerArray[4];\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\cf1\lang1033\fs20\kerning28 \}\par
}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 function 
checkAnswer(boxName) \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab //trace
(_{\b\fs24 root}.wrong_count);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab studAnswer
 = this[boxName].text;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab //trace
(boxName);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab trace
("StudAnswer: "+studAnswer+" Correct answer: "+theAnswer);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab if (studAnswer
.toUpperCase() == theAnswer.toUpperCase()) \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab trace
("Correct");\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab loadMovie
("help/correct/correct.swf", 2);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab{\b
\fs24 _root.getResponse(studAnswer, true);\par}}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab \} else
 \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab //
shuffle();\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\par
}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\b\f0\lang1033\fs24\kerning28 We don\u8217
\'92t NEED to use this anymore, Ivon originally wanted me to get rid of it and do
 it in each frame.\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\b\f0\lang1033\fs24\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\b\f0\lang1033\fs24\kerning28 Like above
 the first  hint you would have the code  _global.wrong_count =2 and second hint
 would have _global.wrong_count = 3 etc.\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\b\f0\lang1033\fs24\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\b\f0\lang1033\fs24\kerning28 I guess
 at this point either or would work. If your gonna do the method where you declare
 the number of _global.wrong_count above the hint then just make sure you change
 _global.wrong_count in the beginning of this code to _global.wrong_count = 1 and
 comment out _global.wrong_count++. Also\u8230\'85. If you ARE gonna use _global
.wrong_count++ make sure you set _global.wrong_count=0 at the top of this code. 
EITHER WILL WORK.{\i\par}}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 //_{\b\fs24
root{\fs20 .}}wrong_count++;   \par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab Switch
 (_{\b\fs24 root.}wrong_count) \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab case
 1 :\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
loadMovie("help/incorrect/incorrect.swf", 2);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
break;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab case
 2 :\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
loadMovie("help/review/review.swf", 2);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
break;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab case
 3 :\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
loadMovie("help/final/final.swf", 2);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
break;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab default
 :\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
trace("Broken at case/break on first frame");\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
break;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab \}
\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab framecount
 = 0;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab{\b
\fs24 _root.}onEnterFrame = function() \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
framecount++;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
if (framecount == 70) \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
\tab{\b\fs24 _root.getResponse(studAnswer, false);}\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab\tab
\}\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab \}
;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab \}\par
}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 \}\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 function 
shuffle() \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab for (
i=0; i<arrayIn.length; i++) \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab swapSpot
 = Math.floor(Math.random()*5);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab temp
 = arrayIn[i];\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab arrayIn
[i] = arrayIn[swapSpot];\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab arrayIn
[swapSpot] = temp;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab \}\par
}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab setupText
(arrayIn);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 \}\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\qc\sl240\slmult1{\b\f0\lang1033\fs24\kerning28 Code
 Below Review Hint \par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 stop();\par
}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\b\i\f0\lang1033\fs24\kerning28 _root
.wrong_count = 3; {\i0 Or whatever you need it to be.\par}}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 framecount2
 = 0;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\b\f0\lang1033\fs24\kerning28 _root.{
\b0\fs20 onEnterFrame = function () \{\par}}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab framecount2
++;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab switch
 (framecount2) \{\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab case 
2 :\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab attachMovie
("pythag_theorem", "pythag_theorem", 500);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab break
;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab case 
125 :\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab loadMovie
("help/best/best.swf", 502);\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab\tab break
;\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\tab \}\par
}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28 \};\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\f0\lang1033\fs20\kerning28\par}

\pard\nowidctlpar\nooverflow\sl240\slmult1{\b\f0\cf1\lang1033\fs20\kerning28 You
 should  know about the answer boxes and answer texts changes by now. If not, just
 copy and paste the multiple choice mc thingy to the stage and in the code the answers
 display themselves.}}