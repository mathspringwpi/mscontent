




<!DOCTYPE html>
<html class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    
    <title>SoundJS/lib/soundjs-0.5.2.min.js at master Â· CreateJS/SoundJS</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="CreateJS/SoundJS" name="twitter:title" /><meta content="SoundJS - A Javascript library for working with Audio. Features a simple interface as the front end to multiple audio APIs via a plugin model. Currently supports WebAudio, HTML5 Audio, &amp;amp; a Flash f" name="twitter:description" /><meta content="https://avatars3.githubusercontent.com/u/1497318?s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars3.githubusercontent.com/u/1497318?s=400" property="og:image" /><meta content="CreateJS/SoundJS" property="og:title" /><meta content="https://github.com/CreateJS/SoundJS" property="og:url" /><meta content="SoundJS - A Javascript library for working with Audio. Features a simple interface as the front end to multiple audio APIs via a plugin model. Currently supports WebAudio, HTML5 Audio, &amp; a Flash fallback." property="og:description" />

    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets" />

    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="807728C1:7B31:9862749:53D698C9" name="octolytics-dimension-request_id" /><meta content="881914" name="octolytics-actor-id" /><meta content="jwnewman" name="octolytics-actor-login" /><meta content="68efe0f9559ddc8cfb008cd4a0f1ecbca8032bc6922d574f71d3629aab497d1b" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico" />


    <meta content="authenticity_token" name="csrf-param" />
<meta content="5zmJhYyXG08WzFQkjU1OVwm8iVqA1Z0fiXn+XM4/otqLrl7Kzv2kRZpEWN6DwbJlgRtWZ2MRAyAUgABQd+L0Qw==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-c767c0f68170455b664c54ed48e2ba0d0110070e.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-96fbcd5addaa33e50491349681944211bd758093.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="ea5e90bf4a031c4ad87b59165894a3c4">

      
  <meta name="description" content="SoundJS - A Javascript library for working with Audio. Features a simple interface as the front end to multiple audio APIs via a plugin model. Currently supports WebAudio, HTML5 Audio, &amp; a Flash fallback." />


  <meta content="1497318" name="octolytics-dimension-user_id" /><meta content="CreateJS" name="octolytics-dimension-user_login" /><meta content="2692921" name="octolytics-dimension-repository_id" /><meta content="CreateJS/SoundJS" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="2692921" name="octolytics-dimension-repository_network_root_id" /><meta content="CreateJS/SoundJS" name="octolytics-dimension-repository_network_root_nwo" />

  <link href="https://github.com/CreateJS/SoundJS/commits/master.atom" rel="alternate" title="Recent Commits to SoundJS:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" aria-label="Homepage">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


    
    <a href="/notifications" aria-label="You have unread notifications" class="notification-indicator tooltipped tooltipped-s" data-hotkey="g n">
        <span class="mail-status unread"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<div class="commandbar">
  <span class="message"></span>
  <input type="text" data-hotkey="s, /" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="jwnewman"
    data-repo="CreateJS/SoundJS"
  >
  <div class="display hidden"></div>
</div>

    <input type="hidden" name="nwo" value="CreateJS/SoundJS" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    

<ul id="user-links">
  <li>
    <a href="/jwnewman" class="name">
      <img alt="jwnewman" data-user="881914" height="20" src="https://avatars1.githubusercontent.com/u/881914?s=40" width="20" /> jwnewman
    </a>
  </li>

  <li class="new-menu dropdown-toggle js-menu-container">
    <a href="#" class="js-menu-target tooltipped tooltipped-s" aria-label="Create new...">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-arrow"></span>
    </a>

    <div class="new-menu-content js-menu-content">
    </div>
  </li>

  <li>
    <a href="/settings/profile" id="account_settings"
      class="tooltipped tooltipped-s"
      aria-label="Account settings ">
      <span class="octicon octicon-tools"></span>
    </a>
  </li>
  <li>
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="eDWGyCq2VJXgbiNl+64FdTg3927ACOb5/caCB0KJHtCjOa2NXpYEBRMQUBXWg20ojwdia0d8iurwPHAPt7vkrg==" /></div>
      <button class="sign-out-button tooltipped tooltipped-s" aria-label="Sign out">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="https://porter.github.com/new"><span class="octicon octicon-move-right"></span> Import repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="CreateJS/SoundJS">This repository</span>
    </li>
      <li>
        <a href="/CreateJS/SoundJS/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="dL+iFQN9MTNg/eaHE0y3Q3vrnGi3Q8YFDwnpaxJYfev5QtN+TxkpL44bsgIDNViCFPrWxJBW22j/vp3qRv+4RA==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="2692921" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/CreateJS/SoundJS/watchers">
        129
      </a>
      <a href="/CreateJS/SoundJS/subscription"
        class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Watch
        </span>
      </a>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
            <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">Be notified when participating or @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">Be notified of all conversations.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">Never be notified.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
    

  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/CreateJS/SoundJS/unstar" class="js-toggler-form starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="2O3BQHXr14vAZoyAylWaBBnqOUkW0jCwH5CU7pIkwOQROXGzMJ/SDo6CTeep0KvbWg5Wt6IsOJRfNjLmrIbfAw==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar CreateJS/SoundJS">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/CreateJS/SoundJS/stargazers">
          1,061
        </a>
</form>
    <form accept-charset="UTF-8" action="/CreateJS/SoundJS/star" class="js-toggler-form unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="1ah/CwEuvwQraGlxMBFhqGPMXHCFSxZ/9pagNvjPB/aVbDHhs/Q9UhJmThujimaj44xTGFTxHQGjFblxLe992g==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star CreateJS/SoundJS">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/CreateJS/SoundJS/stargazers">
          1,061
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/CreateJS/SoundJS/fork" class="minibutton with-count js-toggler-target fork-button lighter tooltipped-n" title="Fork your own copy of CreateJS/SoundJS to your account" aria-label="Fork your own copy of CreateJS/SoundJS to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/CreateJS/SoundJS/network" class="social-count">315</a>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/CreateJS" class="url fn" itemprop="url" rel="author"><span itemprop="title">CreateJS</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/CreateJS/SoundJS" class="js-current-repository js-repo-home-link">SoundJS</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders" data-issue-count-url="/CreateJS/SoundJS/issues/counts">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/CreateJS/SoundJS" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /CreateJS/SoundJS">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/CreateJS/SoundJS/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /CreateJS/SoundJS/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class="js-issue-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/CreateJS/SoundJS/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /CreateJS/SoundJS/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class="js-pull-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/CreateJS/SoundJS/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g w" data-selected-links="repo_wiki /CreateJS/SoundJS/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/CreateJS/SoundJS/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /CreateJS/SoundJS/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/CreateJS/SoundJS/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /CreateJS/SoundJS/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/CreateJS/SoundJS.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/CreateJS/SoundJS.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:CreateJS/SoundJS.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:CreateJS/SoundJS.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/CreateJS/SoundJS" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/CreateJS/SoundJS" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>


  <a href="http://windows.github.com" class="minibutton sidebar-button" title="Save CreateJS/SoundJS to your computer and use it in GitHub Desktop." aria-label="Save CreateJS/SoundJS to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/CreateJS/SoundJS/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download CreateJS/SoundJS as a zip file"
                   title="Download CreateJS/SoundJS as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<a href="/CreateJS/SoundJS/blob/c796dae702a689a4282d27bfec35dff51468e034/lib/soundjs-0.5.2.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:feeb79c9cbbef42665771594d4678216 -->

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/CreateJS/SoundJS/blob/RequestMethod/lib/soundjs-0.5.2.min.js"
                 data-name="RequestMethod"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="RequestMethod">RequestMethod</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/CreateJS/SoundJS/blob/master/lib/soundjs-0.5.2.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/CreateJS/SoundJS/tree/release_v0.5.2/lib/soundjs-0.5.2.min.js"
                 data-name="release_v0.5.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="release_v0.5.2">release_v0.5.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/CreateJS/SoundJS/tree/release_v0.5.1/lib/soundjs-0.5.2.min.js"
                 data-name="release_v0.5.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="release_v0.5.1">release_v0.5.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/CreateJS/SoundJS/tree/release_v0.5.0/lib/soundjs-0.5.2.min.js"
                 data-name="release_v0.5.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="release_v0.5.0">release_v0.5.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/CreateJS/SoundJS/tree/release_v0.4.1/lib/soundjs-0.5.2.min.js"
                 data-name="release_v0.4.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="release_v0.4.1">release_v0.4.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/CreateJS/SoundJS/tree/release_v0.4.0/lib/soundjs-0.5.2.min.js"
                 data-name="release_v0.4.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="release_v0.4.0">release_v0.4.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/CreateJS/SoundJS/tree/release_v0.3.0/lib/soundjs-0.5.2.min.js"
                 data-name="release_v0.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="release_v0.3.0">release_v0.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/CreateJS/SoundJS/tree/release_v0.2.0/lib/soundjs-0.5.2.min.js"
                 data-name="release_v0.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="release_v0.2.0">release_v0.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/CreateJS/SoundJS/tree/release_v0.1.0/lib/soundjs-0.5.2.min.js"
                 data-name="release_v0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="release_v0.1.0">release_v0.1.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/CreateJS/SoundJS/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="lib/soundjs-0.5.2.min.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/CreateJS/SoundJS" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">SoundJS</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/CreateJS/SoundJS/tree/master/lib" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">lib</span></a></span><span class="separator"> / </span><strong class="final-path">soundjs-0.5.2.min.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
      <img alt="Lanny McNie" class="main-avatar" data-user="590731" height="24" src="https://avatars1.githubusercontent.com/u/590731?s=48" width="24" />
      <span class="author"><a href="/lannymcnie" rel="contributor">lannymcnie</a></span>
      <time datetime="2013-12-12T16:39:52-07:00" is="relative-time">December 12, 2013</time>
      <div class="commit-title">
          <a href="/CreateJS/SoundJS/commit/c52f63399c5efb1501645e79d70b05f74aa4fc8a" class="message" data-pjax="true" title="SoundJS version 0.5.2

Signed-off-by: Lanny McNie &lt;lanny@gskinner.com&gt;">SoundJS version 0.5.2</a>
      </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong>  contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Lanny McNie" data-user="590731" height="24" src="https://avatars1.githubusercontent.com/u/590731?s=48" width="24" />
            <a href="/lannymcnie">lannymcnie</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>18 lines (16 sloc)</span>
          <span class="meta-divider"></span>
        <span>34.263 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/CreateJS/SoundJS/raw/master/lib/soundjs-0.5.2.min.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/CreateJS/SoundJS/blame/master/lib/soundjs-0.5.2.min.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/CreateJS/SoundJS/commits/master/lib/soundjs-0.5.2.min.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw"
             href="http://windows.github.com" aria-label="Open this file in GitHub for Windows">
              <span class="octicon octicon-device-desktop"></span>
          </a>

              <a class="octicon-button tooltipped tooltipped-n js-update-url-with-hash"
                 aria-label="Clicking this button will fork this project so you can edit the file"
                 href="/CreateJS/SoundJS/edit/master/lib/soundjs-0.5.2.min.js"
                 data-method="post" rel="nofollow"><span class="octicon octicon-pencil"></span></a>

            <a class="octicon-button danger tooltipped tooltipped-s"
               href="/CreateJS/SoundJS/delete/master/lib/soundjs-0.5.2.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
      
  <div class="blob-wrapper data type-javascript">
       <table class="file-code file-diff tab-size-8">
         <tr class="file-code-line">
           <td class="blob-line-nums">
             <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>

           </td>
           <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="cm">/*!</span></div><div class='line' id='LC2'><span class="cm">* @license SoundJS</span></div><div class='line' id='LC3'><span class="cm">* Visit http://createjs.com/ for documentation, updates and examples.</span></div><div class='line' id='LC4'><span class="cm">*</span></div><div class='line' id='LC5'><span class="cm">* Copyright (c) 2011-2013 gskinner.com, inc.</span></div><div class='line' id='LC6'><span class="cm">*</span></div><div class='line' id='LC7'><span class="cm">* Distributed under the terms of the MIT license.</span></div><div class='line' id='LC8'><span class="cm">* http://www.opensource.org/licenses/mit-license.html</span></div><div class='line' id='LC9'><span class="cm">*</span></div><div class='line' id='LC10'><span class="cm">* This notice shall be included in all copies or substantial portions of the Software.</span></div><div class='line' id='LC11'><span class="cm">*/</span></div><div class='line' id='LC12'><br/></div><div class='line' id='LC13'><span class="cm">/**!</span></div><div class='line' id='LC14'><span class="cm"> * SoundJS FlashPlugin also includes swfobject (http://code.google.com/p/swfobject/)</span></div><div class='line' id='LC15'><span class="cm"> */</span></div><div class='line' id='LC16'><br/></div><div class='line' id='LC17'><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{},</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">SoundJS</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">SoundJS</span><span class="o">||</span><span class="p">{};</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="s2">&quot;0.5.2&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">buildDate</span><span class="o">=</span><span class="s2">&quot;Thu, 12 Dec 2013 23:33:37 GMT&quot;</span><span class="p">}(),</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{},</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">on</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">off</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeAllEventListeners</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeAllEventListeners</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasEventListener</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasEventListener</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_dispatchEvent</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_dispatchEvent</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">willTrigger</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">willTrigger</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_captureListeners</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_captureListeners</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_captureListeners</span><span class="o">||</span><span class="p">{}</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">b</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">handleEvent</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">handleEvent</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">()},</span><span class="nx">f</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_captureListeners</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="mi">1</span><span class="o">==</span><span class="nx">g</span><span class="o">?</span><span class="k">delete</span> <span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">}}},</span><span class="nx">b</span><span class="p">.</span><span class="nx">off</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeAllEventListeners</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">_captureListeners</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_captureListeners</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_captureListeners</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="o">||!</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">bubbles</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">d</span><span class="p">.</span><span class="nx">parent</span><span class="p">;)</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parent</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">propagationStopped</span><span class="p">;</span><span class="nx">f</span><span class="o">--</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">_dispatchEvent</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">1</span><span class="o">+</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">f</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">propagationStopped</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">_dispatchEvent</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">3</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">_dispatchEvent</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">defaultPrevented</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_captureListeners</span><span class="p">;</span><span class="k">return</span><span class="o">!!</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">])},</span><span class="nx">b</span><span class="p">.</span><span class="nx">willTrigger</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">b</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasEventListener</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[EventDispatcher]&quot;</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_dispatchEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_captureListeners</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="o">||!</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">))</span><span class="k">return</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentTarget</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventPhase</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">removed</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">immediatePropagationStopped</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">g</span><span class="p">.</span><span class="nx">handleEvent</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">handleEvent</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">removed</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">off</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">removed</span><span class="o">=!</span><span class="mi">1</span><span class="p">)}}},</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">EventDispatcher</span><span class="o">=</span><span class="nx">a</span><span class="p">}(),</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{},</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentTarget</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">eventPhase</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">bubbles</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">cancelable</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">defaultPrevented</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">propagationStopped</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">immediatePropagationStopped</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">removed</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">bubbles</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cancelable</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">()},</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultPrevented</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">propagationStopped</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">stopImmediatePropagation</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">immediatePropagationStopped</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">propagationStopped</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">removed</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">bubbles</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cancelable</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Event (type=&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot;)]&quot;</span><span class="p">},</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Event</span><span class="o">=</span><span class="nx">a</span><span class="p">}(),</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{},</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}}(),</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{},</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="nx">concat</span><span class="p">(</span><span class="nx">c</span><span class="p">))}}}(),</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{},</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="k">throw</span><span class="s2">&quot;Sound cannot be instantiated&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">isDefault</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">removeAllEventListeners</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">hasEventListener</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_interrupt</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_playFailed</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pause</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">resume</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">play</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_beginPlaying</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stop</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">setMasterVolume</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">setVolume</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">mute</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">setMute</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getMute</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">setPan</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPosition</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">setPosition</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">playFailed</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">getVolume</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPan</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getDuration</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">0</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">PLAY_FAILED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Sound Default Sound Instance]&quot;</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">DELIMITER</span><span class="o">=</span><span class="s2">&quot;|&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">INTERRUPT_ANY</span><span class="o">=</span><span class="s2">&quot;any&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">INTERRUPT_EARLY</span><span class="o">=</span><span class="s2">&quot;early&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">INTERRUPT_LATE</span><span class="o">=</span><span class="s2">&quot;late&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">INTERRUPT_NONE</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">PLAY_INITED</span><span class="o">=</span><span class="s2">&quot;playInited&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">PLAY_SUCCEEDED</span><span class="o">=</span><span class="s2">&quot;playSucceeded&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">PLAY_INTERRUPTED</span><span class="o">=</span><span class="s2">&quot;playInterrupted&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">PLAY_FINISHED</span><span class="o">=</span><span class="s2">&quot;playFinished&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">PLAY_FAILED</span><span class="o">=</span><span class="s2">&quot;playFailed&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">SUPPORTED_EXTENSIONS</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;mp3&quot;</span><span class="p">,</span><span class="s2">&quot;ogg&quot;</span><span class="p">,</span><span class="s2">&quot;mpeg&quot;</span><span class="p">,</span><span class="s2">&quot;wav&quot;</span><span class="p">,</span><span class="s2">&quot;m4a&quot;</span><span class="p">,</span><span class="s2">&quot;mp4&quot;</span><span class="p">,</span><span class="s2">&quot;aiff&quot;</span><span class="p">,</span><span class="s2">&quot;wma&quot;</span><span class="p">,</span><span class="s2">&quot;mid&quot;</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">EXTENSION_MAP</span><span class="o">=</span><span class="p">{</span><span class="nx">m4a</span><span class="o">:</span><span class="s2">&quot;mp4&quot;</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">FILE_PATTERN</span><span class="o">=</span><span class="sr">/^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?))?([/.]*?(?:[^?]+)?\/)?((?:[^/?]+)\.(\w+))(?:\?(\S+)?)?$/</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">defaultInterruptBehavior</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">INTERRUPT_NONE</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">alternateExtensions</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="p">.</span><span class="nx">_lastID</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_pluginsRegistered</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_masterVolume</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_masterMute</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_instances</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="p">.</span><span class="nx">_idHash</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="p">.</span><span class="nx">_defaultSoundInstance</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeAllEventListeners</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">hasEventListener</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_listeners</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">EventDispatcher</span><span class="p">.</span><span class="nx">initialize</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">_sendFileLoadEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">b</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">hasEventListener</span><span class="p">(</span><span class="s2">&quot;fileload&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="s2">&quot;fileload&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">(</span><span class="nx">f</span><span class="p">)}}},</span><span class="nx">e</span><span class="p">.</span><span class="nx">getPreloadHandlers</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">callback</span><span class="o">:</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">initLoad</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">types</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;sound&quot;</span><span class="p">],</span><span class="nx">extensions</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">SUPPORTED_EXTENSIONS</span><span class="p">}},</span><span class="nx">e</span><span class="p">.</span><span class="nx">registerPlugin</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;createjs.Sound.registerPlugin has been deprecated. Please use registerPlugins.&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">_registerPlugin</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">_registerPlugin</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">_pluginsRegistered</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">isSupported</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">registerPlugins</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">_registerPlugin</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">initializeDefaultPlugins</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">_pluginsRegistered</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">registerPlugins</span><span class="p">([</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">WebAudioPlugin</span><span class="p">,</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">])</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">isReady</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">getCapabilities</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">.</span><span class="nx">_capabilities</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">getCapability</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">.</span><span class="nx">_capabilities</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">e</span><span class="p">.</span><span class="nx">initLoad</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">registerSound</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">g</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">g</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">registerSound</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">initializeDefaultPlugins</span><span class="p">())</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Object</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">alternateExtensions</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_parsePath2</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;sound&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_parsePath</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;sound&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">h</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="p">),</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">_idHash</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">channels</span><span class="p">)</span><span class="o">?</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">channels</span><span class="p">));</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">j</span><span class="p">.</span><span class="nx">numChannels</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">numChannels</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">channels</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">channels</span><span class="o">=</span><span class="nx">i</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxPerChannel</span><span class="p">()</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">i</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxPerChannel</span><span class="p">(),</span><span class="kc">null</span><span class="o">!=</span><span class="nx">j</span><span class="p">.</span><span class="nx">tag</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">tag</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">tag</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">src</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">src</span><span class="p">),</span><span class="kc">null</span><span class="o">!=</span><span class="nx">j</span><span class="p">.</span><span class="nx">completeHandler</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">completeHandler</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">completeHandler</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">type</span><span class="p">)),</span><span class="mi">0</span><span class="o">!=</span><span class="nx">f</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="p">]</span><span class="o">=</span><span class="p">[]),</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="p">].</span><span class="nx">push</span><span class="p">({</span><span class="nx">src</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">d</span><span class="p">}),</span><span class="mi">1</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="p">].</span><span class="nx">length</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">.</span><span class="nx">preload</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="nx">j</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">h</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">registerManifest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">registerSound</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">src</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">id</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">data</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">preload</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeSound</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Object</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_getSrcById</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">alternateExtensions</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_parsePath2</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_parsePath</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">src</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">src</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">e</span><span class="p">.</span><span class="nx">_idHash</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">_idHash</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">e</span><span class="p">.</span><span class="nx">_idHash</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">removeSrc</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">delete</span> <span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">.</span><span class="nx">removeSound</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeManifest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">removeSound</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">src</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeAllSounds</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">_idHash</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeAll</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">.</span><span class="nx">removeAllSounds</span><span class="p">()},</span><span class="nx">e</span><span class="p">.</span><span class="nx">loadComplete</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">alternateExtensions</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_parsePath2</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;sound&quot;</span><span class="p">);</span><span class="k">else</span> <span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_parsePath</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;sound&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">_getSrcById</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">_getSrcById</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="mi">1</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">_preloadHash</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="mi">0</span><span class="p">]},</span><span class="nx">e</span><span class="p">.</span><span class="nx">_parsePath</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="s2">&quot;string&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">DELIMITER</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span><span class="k">try</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;createjs.Sound.DELIMITER &quot;|&quot; loading approach has been deprecated. Please use the new alternateExtensions property.&#39;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;sound&quot;</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">d</span><span class="p">},</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getCapabilities</span><span class="p">(),</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">FILE_PATTERN</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">m</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="mi">5</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">SUPPORTED_EXTENSIONS</span><span class="p">,</span><span class="nx">o</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">extension</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">h</span><span class="p">}</span><span class="k">return</span> <span class="kc">null</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">_parsePath2</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="s2">&quot;string&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">FILE_PATTERN</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getCapabilities</span><span class="p">(),</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="o">!</span><span class="nx">i</span><span class="p">[</span><span class="nx">h</span><span class="p">];)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">alternateExtensions</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">j</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">alternateExtensions</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;sound&quot;</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="nx">d</span><span class="p">};</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">extension</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">play</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">createInstance</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_playInstance</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">return</span> <span class="nx">j</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">playFailed</span><span class="p">(),</span><span class="nx">i</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">createInstance</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">initializeDefaultPlugins</span><span class="p">())</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">_defaultSoundInstance</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_getSrcById</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">alternateExtensions</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_parsePath2</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;sound&quot;</span><span class="p">);</span><span class="k">else</span> <span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_parsePath</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;sound&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">src</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">src</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">src</span><span class="p">))</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_defaultSoundInstance</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">uniqueId</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_lastID</span><span class="o">++</span><span class="p">,</span><span class="nx">f</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">setVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nb">Number</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">)),</span><span class="nx">e</span><span class="p">.</span><span class="nx">_masterVolume</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">activePlugin</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">.</span><span class="nx">setVolume</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">.</span><span class="nx">setVolume</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">setMasterVolume</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">getVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">_masterVolume</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">setMute</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_masterMute</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">activePlugin</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">.</span><span class="nx">setMute</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">activePlugin</span><span class="p">.</span><span class="nx">setMute</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">setMasterMute</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">getMute</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_masterMute</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">stop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">stop</span><span class="p">()},</span><span class="nx">e</span><span class="p">.</span><span class="nx">_playInstance</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nb">Object</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">delay</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offset</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">loop</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">volume</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pan</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">interrupt</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">defaultInterruptBehavior</span><span class="p">,</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getPosition</span><span class="p">()),</span><span class="kc">null</span><span class="o">==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">volume</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pan</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">_beginPlaying</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">i</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">_beginPlaying</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">)},</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">_delayTimeoutId</span><span class="o">=</span><span class="nx">j</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">_beginPlaying</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_beginPlaying</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">i</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">_getSrcById</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">_idHash</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">_idHash</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">_idHash</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">e</span><span class="p">.</span><span class="nx">_playFinished</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">channels</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="p">.</span><span class="nx">create</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">channels</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeSrc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeAll</span><span class="p">(),</span><span class="k">delete</span> <span class="nx">b</span><span class="p">.</span><span class="nx">channels</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeAll</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">b</span><span class="p">.</span><span class="nx">channels</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">channels</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">removeAll</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">channels</span><span class="o">=</span><span class="p">{}},</span><span class="nx">b</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxPerChannel</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">maxDefault</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">channels</span><span class="p">[</span><span class="nx">a</span><span class="p">]};</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">maxDefault</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">init</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">maxDefault</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">maxDefault</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="o">=</span><span class="p">[]},</span><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">f</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getSlot</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">++</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">f</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">--</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeAll</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_instances</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">stop</span><span class="p">()},</span><span class="nx">f</span><span class="p">.</span><span class="nx">getSlot</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;(</span><span class="nx">b</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">INTERRUPT_NONE</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">playState</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">PLAY_FINISHED</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">0</span><span class="o">!=</span><span class="nx">e</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">playState</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">PLAY_FINISHED</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">playState</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">PLAY_INTERRUPTED</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">playState</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">PLAY_FAILED</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">INTERRUPT_EARLY</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">getPosition</span><span class="p">()</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">getPosition</span><span class="p">()</span><span class="o">||</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">INTERRUPT_LATE</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">getPosition</span><span class="p">()</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">getPosition</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">)}</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">_interrupt</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">f</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[Sound SoundChannel]&quot;</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">_defaultSoundInstance</span><span class="o">=</span><span class="k">new</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">init</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">isFirefox</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Firefox&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">isOpera</span><span class="o">=</span><span class="kc">null</span><span class="o">!=</span><span class="nb">window</span><span class="p">.</span><span class="nx">opera</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">isChrome</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Chrome&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">isIOS</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;iPod&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;iPhone&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;iPad&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">isAndroid</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Android&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">isBlackberry</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Blackberry&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">init</span><span class="p">(),</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">BrowserDetect</span><span class="o">=</span><span class="nx">d</span><span class="p">}(),</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{},</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_init</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">isSupported</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">BrowserDetect</span><span class="p">.</span><span class="nx">isIOS</span><span class="o">||</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">BrowserDetect</span><span class="p">.</span><span class="nx">isAndroid</span><span class="o">||</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">BrowserDetect</span><span class="p">.</span><span class="nx">isBlackberry</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;file:&quot;</span><span class="o">!=</span><span class="nx">location</span><span class="p">.</span><span class="nx">protocol</span><span class="o">||</span><span class="nx">a</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_isFileXHRSupported</span><span class="p">()</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">_generateCapabilities</span><span class="p">(),</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="o">?!</span><span class="mi">1</span><span class="o">:!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_isFileXHRSupported</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="s2">&quot;fail.fail&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="o">=</span><span class="mi">404</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">status</span><span class="o">||</span><span class="mi">200</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">status</span><span class="o">||</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">status</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&quot;</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">response</span><span class="p">};</span><span class="k">try</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">send</span><span class="p">()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_generateCapabilities</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;audio&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">webkitAudioContext</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="k">new</span> <span class="nx">webkitAudioContext</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">window</span><span class="p">.</span><span class="nx">AudioContext</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="k">new</span> <span class="nx">AudioContext</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">_compatibilitySetUp</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">playEmptySound</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="o">=</span><span class="p">{</span><span class="nx">panning</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">volume</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">tracks</span><span class="o">:-</span><span class="mi">1</span><span class="p">};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">SUPPORTED_EXTENSIONS</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">EXTENSION_MAP</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="nx">g</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;no&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;no&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">destination</span><span class="p">.</span><span class="nx">numberOfChannels</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="p">.</span><span class="nx">panning</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">dynamicsCompressorNode</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">createDynamicsCompressor</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">dynamicsCompressorNode</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">destination</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">gainNode</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">createGain</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dynamicsCompressorNode</span><span class="p">)}},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_compatibilitySetUp</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">createGain</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">createGain</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">createGainNode</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">createBufferSource</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">__proto__</span><span class="p">.</span><span class="nx">start</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">__proto__</span><span class="p">.</span><span class="nx">noteGrainOn</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">__proto__</span><span class="p">.</span><span class="nx">stop</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">__proto__</span><span class="p">.</span><span class="nx">noteOff</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_panningModel</span><span class="o">=</span><span class="mi">0</span><span class="p">}},</span><span class="nx">b</span><span class="p">.</span><span class="nx">playEmptySound</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">createBuffer</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">22050</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">createBufferSource</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">buffer</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">destination</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">start</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_capabilities</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">_volume</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">_panningModel</span><span class="o">=</span><span class="s2">&quot;equalpower&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">dynamicsCompressorNode</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">gainNode</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">_init</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_capabilities</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">dynamicsCompressorNode</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dynamicsCompressorNode</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">register</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">WebAudioPlugin</span><span class="p">.</span><span class="nx">Loader</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">tag</span><span class="o">:</span><span class="nx">b</span><span class="p">}},</span><span class="nx">c</span><span class="p">.</span><span class="nx">isPreloadStarted</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">c</span><span class="p">.</span><span class="nx">isPreloadComplete</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="mi">1</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="p">[</span><span class="nx">a</span><span class="p">])},</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeSound</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeAllSounds</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="o">=</span><span class="p">{}},</span><span class="nx">c</span><span class="p">.</span><span class="nx">addPreloadResults</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">_handlePreloadComplete</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">_sendFileLoadEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">)},</span><span class="nx">c</span><span class="p">.</span><span class="nx">preload</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">WebAudioPlugin</span><span class="p">.</span><span class="nx">Loader</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_handlePreloadComplete</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">load</span><span class="p">()},</span><span class="nx">c</span><span class="p">.</span><span class="nx">create</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">isPreloadStarted</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">preload</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">WebAudioPlugin</span><span class="p">.</span><span class="nx">SoundInstance</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">c</span><span class="p">.</span><span class="nx">setVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_volume</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">_masterMute</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_volume</span><span class="p">;</span><span class="nx">a</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">.</span><span class="nx">gain</span><span class="p">.</span><span class="nx">value</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">.</span><span class="nx">gain</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">a</span><span class="p">)},</span><span class="nx">c</span><span class="p">.</span><span class="nx">getVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_volume</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">setMute</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[WebAudioPlugin]&quot;</span><span class="p">},</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">WebAudioPlugin</span><span class="o">=</span><span class="nx">a</span><span class="p">}(),</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_init</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">EventDispatcher</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">uniqueId</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_owner</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_delay</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_volume</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;volume&quot;</span><span class="p">,{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_volume</span><span class="p">},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nb">Number</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_volume</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="p">(),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}})}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){}</span><span class="nx">b</span><span class="p">.</span><span class="nx">_pan</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;pan&quot;</span><span class="p">,{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_pan</span><span class="p">},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">_capabilities</span><span class="p">.</span><span class="nx">panning</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_pan</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">panNode</span><span class="p">.</span><span class="nx">setPosition</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="p">.</span><span class="mi">5</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">}})}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){}</span><span class="nx">b</span><span class="p">.</span><span class="nx">_duration</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_remainingLoops</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_delayTimeoutId</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_soundCompleteTimeout</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">gainNode</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">panNode</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">sourceNode</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_sourceNodeNext</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_muted</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_paused</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_startTime</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_endedHandler</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_init</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">createGain</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">panNode</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">createPanner</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">panNode</span><span class="p">.</span><span class="nx">panningModel</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">_panningModel</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">panNode</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">isPreloadComplete</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_duration</span><span class="o">=</span><span class="mi">1</span><span class="nx">e3</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">].</span><span class="nx">duration</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_endedHandler</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleSoundComplete</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">==</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_SUCCEEDED</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUpAudioNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceNodeNext</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUpAudioNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceNodeNext</span><span class="p">)),</span><span class="mi">0</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">.</span><span class="nx">numberOfOutputs</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_delayTimeoutId</span><span class="p">),</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_soundCompleteTimeout</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_startTime</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="kc">null</span><span class="o">!=</span><span class="nb">window</span><span class="p">.</span><span class="nx">createjs</span><span class="o">&amp;&amp;</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">_playFinished</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_cleanUpAudioNode</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stop</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">panNode</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">a</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_interrupt</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_INTERRUPTED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="p">(</span><span class="s2">&quot;interrupted&quot;</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handleSoundReady</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nb">window</span><span class="p">.</span><span class="nx">createjs</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="nx">e3</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">getDuration</span><span class="p">())</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">playFailed</span><span class="p">(),</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_SUCCEEDED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">].</span><span class="nx">duration</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_createAndPlayAudioNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">currentTime</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_duration</span><span class="o">=</span><span class="mi">1</span><span class="nx">e3</span><span class="o">*</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_startTime</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="p">.</span><span class="nx">startTime</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_soundCompleteTimeout</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_endedHandler</span><span class="p">,</span><span class="mi">1</span><span class="nx">e3</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="p">)),</span><span class="mi">0</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">_remainingLoops</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceNodeNext</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_createAndPlayAudioNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_startTime</span><span class="p">,</span><span class="mi">0</span><span class="p">))}},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_createAndPlayAudioNode</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">createBufferSource</span><span class="p">();</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">buffer</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">_arrayBuffers</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">panNode</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">currentTime</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">startTime</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">buffer</span><span class="p">.</span><span class="nx">duration</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">start</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">startTime</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">buffer</span><span class="p">.</span><span class="nx">duration</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">play</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="p">(),</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">_playInstance</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_beginPlaying</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="nb">window</span><span class="p">.</span><span class="nx">createjs</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="mi">1</span><span class="nx">e3</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_remainingLoops</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">volume</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pan</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">isPreloadComplete</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleSoundReady</span><span class="p">(</span><span class="kc">null</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="p">(</span><span class="s2">&quot;succeeded&quot;</span><span class="p">),</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">playFailed</span><span class="p">(),</span><span class="k">void</span> <span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">pause</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">!=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_SUCCEEDED</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">currentTime</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_startTime</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUpAudioNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUpAudioNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceNodeNext</span><span class="p">),</span><span class="mi">0</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">.</span><span class="nx">numberOfOutputs</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">(),</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_delayTimeoutId</span><span class="p">),</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_soundCompleteTimeout</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">resume</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleSoundReady</span><span class="p">(</span><span class="kc">null</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_FINISHED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">setVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">volume</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_muted</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_volume</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">.</span><span class="nx">gain</span><span class="p">.</span><span class="nx">value</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">gainNode</span><span class="p">.</span><span class="nx">gain</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">volume</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">setMute</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_muted</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMute</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_muted</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">setPan</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pan</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pan</span><span class="o">!=</span><span class="nx">a</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getPan</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">pan</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getPosition</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="p">)</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="p">;</span><span class="k">else</span> <span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">currentTime</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_startTime</span><span class="p">;</span><span class="k">return</span> <span class="mi">1</span><span class="nx">e3</span><span class="o">*</span><span class="nx">a</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">setPosition</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="mi">1</span><span class="nx">e3</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">==</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_SUCCEEDED</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUpAudioNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUpAudioNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceNodeNext</span><span class="p">),</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_soundCompleteTimeout</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">!=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_SUCCEEDED</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleSoundReady</span><span class="p">(</span><span class="kc">null</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getDuration</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_duration</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handleSoundComplete</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">_remainingLoops</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_remainingLoops</span><span class="o">--</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceNodeNext</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUpAudioNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceNodeNext</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_startTime</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceNode</span><span class="p">.</span><span class="nx">startTime</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceNodeNext</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_createAndPlayAudioNode</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_startTime</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_soundCompleteTimeout</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_endedHandler</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_duration</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleSoundReady</span><span class="p">(</span><span class="kc">null</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="p">(</span><span class="s2">&quot;loop&quot;</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nb">window</span><span class="p">.</span><span class="nx">createjs</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_FINISHED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="p">(</span><span class="s2">&quot;complete&quot;</span><span class="p">)),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">playFailed</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kc">null</span><span class="o">!=</span><span class="nb">window</span><span class="p">.</span><span class="nx">createjs</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_FAILED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="p">(</span><span class="s2">&quot;failed&quot;</span><span class="p">))},</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[WebAudioPlugin SoundInstance]&quot;</span><span class="p">},</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">WebAudioPlugin</span><span class="p">.</span><span class="nx">SoundInstance</span><span class="o">=</span><span class="nx">a</span><span class="p">}(),</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_init</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">request</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">owner</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">progress</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">originalSrc</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">result</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">onprogress</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">onError</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_init</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">originalSrc</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">owner</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">load</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="o">=</span><span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">responseType</span><span class="o">=</span><span class="s2">&quot;arraybuffer&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleLoad</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">onError</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">onprogress</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleProgress</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">send</span><span class="p">()},</span><span class="nx">b</span><span class="p">.</span><span class="nx">handleProgress</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">progress</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">onprogress</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">onprogress</span><span class="p">({</span><span class="nx">loaded</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">total</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">progress</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">progress</span><span class="p">})},</span><span class="nx">b</span><span class="p">.</span><span class="nx">handleLoad</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">owner</span><span class="p">.</span><span class="nx">context</span><span class="p">.</span><span class="nx">decodeAudioData</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">request</span><span class="p">.</span><span class="nx">response</span><span class="p">,</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleAudioDecoded</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleError</span><span class="p">,</span><span class="k">this</span><span class="p">))},</span><span class="nx">b</span><span class="p">.</span><span class="nx">handleAudioDecoded</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">progress</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">result</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">originalSrc</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">owner</span><span class="p">.</span><span class="nx">addPreloadResults</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">result</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">onload</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">onload</span><span class="p">()},</span><span class="nx">b</span><span class="p">.</span><span class="nx">handleError</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">owner</span><span class="p">.</span><span class="nx">removeSound</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">onerror</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">onerror</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[WebAudioPlugin Loader]&quot;</span><span class="p">},</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">WebAudioPlugin</span><span class="p">.</span><span class="nx">Loader</span><span class="o">=</span><span class="nx">a</span><span class="p">}(),</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createjs</span><span class="o">||</span><span class="p">{},</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_init</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">MAX_INSTANCES</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_AUDIO_READY</span><span class="o">=</span><span class="s2">&quot;canplaythrough&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_AUDIO_ENDED</span><span class="o">=</span><span class="s2">&quot;ended&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_AUDIO_SEEKED</span><span class="o">=</span><span class="s2">&quot;seeked&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_AUDIO_STALLED</span><span class="o">=</span><span class="s2">&quot;stalled&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">enableIOS</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">isSupported</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">BrowserDetect</span><span class="p">.</span><span class="nx">isIOS</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">enableIOS</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_generateCapabilities</span><span class="p">();</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tag</span><span class="p">;</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="o">?!</span><span class="mi">1</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_generateCapabilities</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tag</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;audio&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="o">=</span><span class="p">{</span><span class="nx">panning</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">volume</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">tracks</span><span class="o">:-</span><span class="mi">1</span><span class="p">};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">SUPPORTED_EXTENSIONS</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">EXTENSION_MAP</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="nx">g</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;no&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;no&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">)}}};</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">_capabilities</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">_audioSources</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">defaultNumChannels</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">loadedHandler</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">_init</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_capabilities</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_capabilities</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_audioSources</span><span class="o">=</span><span class="p">{}},</span><span class="nx">c</span><span class="p">.</span><span class="nx">register</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_audioSources</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">TagPool</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultNumChannels</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_createTag</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">loadedHandler</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTagLoad</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;canplaythrough&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">loadedHandler</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">loadedHandler</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">loadedHandler</span><span class="p">()}}</span><span class="k">return</span><span class="p">{</span><span class="nx">tag</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">numChannels</span><span class="o">:</span><span class="nx">e</span><span class="p">}},</span><span class="nx">c</span><span class="p">.</span><span class="nx">_handleTagLoad</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;canplaythrough&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">loadedHandler</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">src</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">id</span><span class="o">&amp;&amp;</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">TagPool</span><span class="p">.</span><span class="nx">checkSrc</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">id</span><span class="p">)},</span><span class="nx">c</span><span class="p">.</span><span class="nx">_createTag</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;audio&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">autoplay</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">preload</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeSound</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_audioSources</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">TagPool</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeAllSounds</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_audioSources</span><span class="o">=</span><span class="p">{},</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">TagPool</span><span class="p">.</span><span class="nx">removeAll</span><span class="p">()},</span><span class="nx">c</span><span class="p">.</span><span class="nx">create</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isPreloadStarted</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">TagPool</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_createTag</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">preload</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">tag</span><span class="o">:</span><span class="nx">c</span><span class="p">})}</span><span class="k">return</span> <span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">SoundInstance</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">c</span><span class="p">.</span><span class="nx">isPreloadStarted</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">_audioSources</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">c</span><span class="p">.</span><span class="nx">preload</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_audioSources</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">Loader</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">tag</span><span class="p">)},</span><span class="nx">c</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[HTMLAudioPlugin]&quot;</span><span class="p">},</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="o">=</span><span class="nx">a</span><span class="p">}(),</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_init</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">EventDispatcher</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">uniqueId</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_owner</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">loaded</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_delay</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_volume</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;volume&quot;</span><span class="p">,{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_volume</span><span class="p">},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kc">null</span><span class="o">!=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_volume</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="p">())}})}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){}</span><span class="nx">b</span><span class="p">.</span><span class="nx">pan</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_duration</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_remainingLoops</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_delayTimeoutId</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">tag</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_muted</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_paused</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_endedHandler</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_readyHandler</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_stalledHandler</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">loopHandler</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_init</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_owner</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_endedHandler</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleSoundComplete</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_readyHandler</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleSoundReady</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_stalledHandler</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleSoundStalled</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">loopHandler</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">handleSoundLoop</span><span class="p">,</span><span class="k">this</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">createjs</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">pause</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">_AUDIO_ENDED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_endedHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">_AUDIO_READY</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_readyHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">_AUDIO_SEEKED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">loopHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentTime</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){}</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">TagPool</span><span class="p">.</span><span class="nx">setInstance</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_delayTimeoutId</span><span class="p">),</span><span class="kc">null</span><span class="o">!=</span><span class="nb">window</span><span class="p">.</span><span class="nx">createjs</span><span class="o">&amp;&amp;</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">_playFinished</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_interrupt</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_INTERRUPTED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="p">(</span><span class="s2">&quot;interrupted&quot;</span><span class="p">))},</span><span class="nx">b</span><span class="p">.</span><span class="nx">play</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="p">(),</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">_playInstance</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_beginPlaying</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nb">window</span><span class="p">.</span><span class="nx">createjs</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">TagPool</span><span class="p">.</span><span class="nx">getInstance</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">);</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">playFailed</span><span class="p">(),</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">_AUDIO_ENDED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_endedHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">volume</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pan</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_remainingLoops</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="mi">4</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">readyState</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">_AUDIO_READY</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_readyHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">_AUDIO_STALLED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_stalledHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">preload</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">load</span><span class="p">())</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleSoundReady</span><span class="p">(</span><span class="kc">null</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="p">(</span><span class="s2">&quot;succeeded&quot;</span><span class="p">),</span><span class="mi">1</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handleSoundStalled</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="p">(</span><span class="s2">&quot;failed&quot;</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handleSoundReady</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nb">window</span><span class="p">.</span><span class="nx">createjs</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_duration</span><span class="o">=</span><span class="mi">1</span><span class="nx">e3</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">duration</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_SUCCEEDED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">_AUDIO_READY</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_readyHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">getDuration</span><span class="p">())</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">playFailed</span><span class="p">(),</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">currentTime</span><span class="o">=</span><span class="p">.</span><span class="mi">001</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="p">),</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_remainingLoops</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">loop</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="mi">0</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">_remainingLoops</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">_AUDIO_SEEKED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">loopHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">loop</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">play</span><span class="p">()}},</span><span class="nx">b</span><span class="p">.</span><span class="nx">pause</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">!=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_SUCCEEDED</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">pause</span><span class="p">(),</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_delayTimeoutId</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">resume</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_paused</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">play</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pause</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_FINISHED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">setMasterVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">setVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">volume</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_muted</span><span class="o">||</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">_masterMute</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_volume</span><span class="o">*</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">_masterVolume</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">volume</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">volume</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getVolume</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">volume</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">setMasterMute</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">setMute</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="k">void</span> <span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_muted</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_updateVolume</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMute</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_muted</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">setPan</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getPan</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getPosition</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">:</span><span class="mi">1</span><span class="nx">e3</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">currentTime</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">setPosition</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">_AUDIO_SEEKED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">loopHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">currentTime</span><span class="o">=</span><span class="p">.</span><span class="mi">001</span><span class="o">*</span><span class="nx">a</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">_AUDIO_SEEKED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">loopHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getDuration</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_duration</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">_handleSoundComplete</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="kc">null</span><span class="o">!=</span><span class="nb">window</span><span class="p">.</span><span class="nx">createjs</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_FINISHED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="p">(</span><span class="s2">&quot;complete&quot;</span><span class="p">))},</span><span class="nx">b</span><span class="p">.</span><span class="nx">handleSoundLoop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_offset</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_remainingLoops</span><span class="o">--</span><span class="p">,</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_remainingLoops</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">loop</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">_AUDIO_SEEKED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">loopHandler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="p">(</span><span class="s2">&quot;loop&quot;</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">playFailed</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kc">null</span><span class="o">!=</span><span class="nb">window</span><span class="p">.</span><span class="nx">createjs</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">playState</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">PLAY_FAILED</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_cleanUp</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_sendEvent</span><span class="p">(</span><span class="s2">&quot;failed&quot;</span><span class="p">))},</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[HTMLAudioPlugin SoundInstance]&quot;</span><span class="p">},</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">SoundInstance</span><span class="o">=</span><span class="nx">a</span><span class="p">}(),</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_init</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">tag</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">preloadTimer</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">loadedHandler</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_init</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">preloadTimer</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">preloadTick</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="mi">200</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">loadedHandler</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sendLoadedEvent</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;canplaythrough&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">loadedHandler</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sendLoadedEvent</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">sendLoadedEvent</span><span class="p">,</span><span class="k">this</span><span class="p">)}</span></div><div class='line' id='LC18'><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">preload</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">load</span><span class="p">()},</span><span class="nx">b</span><span class="p">.</span><span class="nx">preloadTick</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">buffered</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">duration</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">&gt;=</span><span class="nx">b</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">handleTagLoaded</span><span class="p">()},</span><span class="nx">b</span><span class="p">.</span><span class="nx">handleTagLoaded</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">preloadTimer</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">sendLoadedEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;canplaythrough&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">loadedHandler</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">tag</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">Sound</span><span class="p">.</span><span class="nx">_sendFileLoadEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[HTMLAudioPlugin Loader]&quot;</span><span class="p">},</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">Loader</span><span class="o">=</span><span class="nx">a</span><span class="p">}(),</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_init</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tags</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tags</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tags</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">)),</span><span class="nx">d</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tags</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeAll</span><span class="p">(),</span><span class="k">delete</span> <span class="nx">b</span><span class="p">.</span><span class="nx">tags</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeAll</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">b</span><span class="p">.</span><span class="nx">tags</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">tags</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">removeAll</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">tags</span><span class="o">=</span><span class="p">{}},</span><span class="nx">b</span><span class="p">.</span><span class="nx">getInstance</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tags</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="p">()},</span><span class="nx">b</span><span class="p">.</span><span class="nx">setInstance</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tags</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">checkSrc</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tags</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">checkSrcChange</span><span class="p">(),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">available</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">tags</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">_init</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="o">=</span><span class="p">[]},</span><span class="nx">c</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">++</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">available</span><span class="o">++</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeAll</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">--</span><span class="p">;)</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">available</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="o">-</span><span class="mi">1</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">available</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">.</span><span class="nx">length</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">checkSrcChange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">src</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">tags</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">src</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">c</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;[HTMLAudioPlugin TagPool]&quot;</span><span class="p">},</span><span class="nx">createjs</span><span class="p">.</span><span class="nx">HTMLAudioPlugin</span><span class="p">.</span><span class="nx">TagPool</span><span class="o">=</span><span class="nx">a</span><span class="p">}();</span></div></pre></div></td>
         </tr>
       </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.08628s from github-fe134-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-caa5b172e276e6cfb9657534025e7be159dc931e.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-e1f8fea67f91b5f76b27cb069352caf881076016.js" type="text/javascript"></script>
      
      
        <script async src="https://www.google-analytics.com/analytics.js"></script>
  </body>
</html>

